plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'java'
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

subprojects {
    group = 'com.example'
    version = '0.1'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
        implementation 'io.github.cdimascio:dotenv-java:2.2.0'

        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'

        implementation 'io.micrometer:micrometer-core'
        implementation 'io.micrometer:micrometer-registry-prometheus'
    }

    test {
        useJUnitPlatform()
    }
}

project('service-internal-api') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        implementation project(':core-domain')
        implementation project(':core-util')
        implementation project(':core-web')
    }
}

project('core-domain') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}
