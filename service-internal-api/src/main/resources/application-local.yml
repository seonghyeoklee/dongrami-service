server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force-response: true

spring:
  application:
    name: service-internal-api
  config:
    activate:
      on-profile: local
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  sql:
    init:
      mode: never
  data:
    web:
      pageable:
        default-page-size: 15
        one-indexed-parameters: true
  security:
    oauth2.client:
      registration:
        google:
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
          scope:
            - email
            - profile
        naver:
          clientId: ${NAVER_CLIENT_ID}
          clientSecret: ${NAVER_CLIENT_SECRET}
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: ${NAVER_REDIRECT_URI}
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: ${KAKAO_CLIENT_ID}
          clientSecret: ${KAKAO_CLIENT_SECRET}
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: ${KAKAO_REDIRECT_URI}
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
  main:
    allow-bean-definition-overriding: true

# jwt secret key 설정
jwt:
  secret: ${JWT_SECRET}

# cors 설정
cors:
  allowed-origins: 'http://localhost:3000,http://localhost'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  auth:
    tokenSecret: ${APP_AUTH_TOKEN_SECRET}
    tokenExpiry: ${APP_AUTH_TOKEN_EXPIRY}
    refreshTokenExpiry: ${APP_AUTH_REFRESH_TOKEN_EXPIRY}
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth/redirect

# Swagger 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    default-model-expand-depth: 10
    default-models-expand-depth: 10
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  packages-to-scan: com.dongrami

# log 설정
logging.level:
  org.hibernate.SQL: debug

# AWS S3 설정
cloud:
  aws:
    credentials:
      access_key: ${AWS_ACCESS_KEY}
      secret_key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}

# Actuator 설정
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      base-path: /actuator
      path-mapping:
        health: health
      exposure:
        include: "*"
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}